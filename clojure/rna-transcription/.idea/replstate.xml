<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1483929445672">{:repl-history {:ide [], :local [&quot;(seq \&quot;ABC\&quot;)&quot; &quot;(defn to-rna [sequence]\n  (let [code (seq sequence)]\n    seq)\n  )&quot; &quot;(to-rna \&quot;ABC\&quot;)&quot; &quot;\&quot;ABC\&quot;&quot; &quot;\&quot;G\&quot;&quot; &quot;\&quot;C\&quot;&quot; &quot;:G&quot; &quot;v&quot; &quot;(conversion-map :G)&quot; &quot;(into [] (seq \&quot;ABC\&quot;))&quot; &quot;(defn to-rna [sequence]\n  (let [acids (into [] (seq sequence))\n        transcribed []]\n    (for [acid acids]\n      (assoc transcribed acid))\n    transcribed))&quot; &quot;(defn to-rna [sequence]\n  (let [acids (into [] (seq sequence))\n        transcribed []]\n    (for [acid acids]\n      (into transcribed acid))\n    transcribed))&quot; &quot;(defn to-rna [sequence]\n  (let [acids (into [] (seq sequence))\n        transcribed []]\n    (prn acids)\n    (for [acid acids]\n      (into transcribed acid))\n    transcribed))&quot; &quot;(defn to-rna [sequence]\n  (let [acids (into [] (seq sequence))\n        transcribed []]\n    (for [acid acids]\n      (prn acid))\n    transcribed))&quot; &quot;(vec \&quot;ABC\&quot;)&quot; &quot;(into [] (vec \&quot;ABC\&quot;))&quot; &quot;(def acids (into [] (vec \&quot;ABC\&quot;)))&quot; &quot;acids&quot; &quot;(for [acid acids] prn acid)&quot; &quot;(for [acid acids] (prn acid))&quot; &quot;(for [acid acids] (into [] acid))&quot; &quot;(for [acid acids] (into \&quot;\&quot; acid))&quot; &quot;(for [acid acids] (str acid))&quot; &quot;(for [acid acids] (join\n                    (str acid)))&quot; &quot;(for [acid acids] (clojure.string/join (str acid)))&quot; &quot;(for [acid acids] (clojure.string/join acid))&quot; &quot;(for [acid acids] (concat acid))&quot; &quot;(for [acid acids] (concat acid)\n                  )&quot; &quot;(clojure.string/join (\&quot;A\&quot; \&quot;B\&quot; \&quot;c\&quot;))&quot; &quot;(clojure.string/join '(\&quot;A\&quot; \&quot;B\&quot; \&quot;C\&quot;))&quot; &quot;(conversion-map :Q)&quot; &quot;(to-rna \&quot;GCA\&quot;)&quot; &quot;(to-rna \&quot;GCUA\&quot;)&quot; &quot;(to-rna \&quot;A\&quot;)&quot; &quot;(to-rna \&quot;T\&quot;)&quot; &quot;(deftest transcribes-cytosine-to-guanine\n  (is (= \&quot;G\&quot; (rna-transcription/to-rna \&quot;C\&quot;))))&quot; &quot;(to-rna \&quot;ACGTGGTCTTAA\&quot;)&quot; &quot;(set \&quot;AGC\&quot;)&quot; &quot;(set \&quot;AGCCGC\&quot;)&quot;], :remote []}}</component>
</project>